--------- Server-wide settings ----------
-- Settings in this section apply to the whole server and are the default settings
-- for any virtual hosts

-- This is a (by default, empty) list of accounts that are admins
-- for the server. Note that you must create the accounts separately
-- (see http://prosody.im/doc/creating_accounts for info)
-- Example: admins = { "user1@example.com", "user2@example.net" }

admins = { "{{ prosody['admin_user'] }}@{{ prosody['admin_domain'] }}" }

-- Enable use of libevent for better performance under high load
-- For more information see: http://prosody.im/doc/libevent
use_libevent = true;

-- This is the list of modules Prosody will load on startup.
-- It looks for mod_modulename.lua in the plugins folder, so make sure that exists too.
-- Documentation on modules can be found at: http://prosody.im/doc/modules
modules_enabled = {

        -- Generally required
                "roster"; -- Allow users to have a roster. Recommended ;)
                "saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
                "tls"; -- Add support for secure TLS on c2s/s2s connections
                "dialback"; -- s2s dialback support
                "disco"; -- Service discovery
                "posix"; -- POSIX functionality, sends server to background, enables syslog, etc.

        -- Not essential, but recommended
                "private"; -- Private XML storage (for room bookmarks, etc.)
                "vcard"; -- Allow users to set vCards

        -- These are commented by default as they have a performance impact
                --"privacy"; -- Support privacy lists
                --"compression"; -- Stream compression (requires the lua-zlib package installed)

        -- Nice to have
                "version"; -- Replies to server version requests
                "uptime"; -- Report how long server has been running
                "time"; -- Let others know the time here on this server
                "ping"; -- Replies to XMPP pings with pongs
                "pep_plus"; -- Enables users to publish their mood, activity, playing music and more
                "register"; -- Allow users to register on this server using a client and change passwords
                "muc"; --multiuserchat
                "compression"; --zlib compression
                "smacks"; --stream management
        -- Admin interfaces
                "admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
                "admin_telnet"; -- Opens telnet console interface on localhost port 5582
                --"console";
                -- "profile";

        -- HTTP modules
                "http";
                "bosh"; -- Enable BOSH clients, aka "Jabber over HTTP"
                --"http_files"; -- Serve static files from a directory over HTTP
--              "websocket";

        -- Other specific functionality
                --"groups"; -- Shared roster support
                --"announce"; -- Send announcement to all online users
                --"welcome"; -- Welcome users who register accounts
                "watchregistrations"; -- Alert admins of registrations
                --"motd"; -- Send a message to users when they log in
                --"legacyauth"; -- Legacy authentication. Only used by some old clients and bots.
};


--console_enabled = true
registration_notification = "User $username just registered on $host from $ip"

-- These modules are auto-loaded, but should you want
-- to disable them then uncomment them here:
modules_disabled = {
        -- "offline"; -- Store offline messages
        -- "c2s"; -- Handle client connections
        -- "s2s"; -- Handle server-to-server connections
};

disco_items = {
     --   { "proxy.eu.jabber.org", "Jabber.org SOCKS5 service" };
--        { "conference.kwoh.de", "kwoh.de MUC" };
    }

-- Disable account creation by default, for security
-- For more information see http://prosody.im/doc/creating_accounts

---allow_registration = true;


-- Force clients to use encrypted connections? This option will
-- prevent clients from authenticating unless they are using encryption.

c2s_require_encryption = true

-- Force certificate authentication for server-to-server connections?
-- This provides ideal security, but requires servers you communicate
-- with to support encryption AND present valid, trusted certificates.
-- NOTE: Your version of LuaSec must support certificate verification!
-- For more information see http://prosody.im/doc/s2s#security

s2s_secure_auth = true
-- Many servers don't support encryption or have invalid or self-signed
-- certificates. You can list domains here that will not be required to
-- authenticate using certificates. They will be authenticated using DNS.

--s2s_insecure_domains = { "gmail.com" }


-- Required for init scripts and prosodyctl
pidfile = "/var/run/prosody/prosody.pid"


authentication = "internal_hashed"


-- Logging configuration
-- For advanced logging see http://prosody.im/doc/logging
log = {
        info = "/var/log/prosody/prosody.log"; -- Change 'info' to 'debug' for verbose logging
        error = "/var/log/prosody/prosody.err";
}

----------- Virtual hosts -----------
-- You need to add a VirtualHost entry for each domain you wish Prosody to serve.
-- Settings under each VirtualHost entry apply *only* to that host.


VirtualHost "xmpp.{{ domain }}"

    http_host = "xmpp.{{ domain }}"

    modules_enabled = {
	    "register_web"
	}

    captcha_options = {
      recaptcha_private_key = "{{ services['prosody']['recaptcha_private_key'] }}";
      recaptcha_public_key = "{{ services['prosody']['recaptcha_public_key'] }}";
    }

allow_registration = false;
min_seconds_between_registrations = 3600

ssl = {
      certificate = "{{ letsencrypt_cert_path }}";  # fullchain
      key = "{{ letsencrypt_key_path }}";  # /path/to/privkey/privkey.pem
      capath = "/etc/ssl/certs";
}

authentication = "internal_hashed"
storage = "sql" -- Default is "internal"
sql = { driver = "PostgreSQL", database = "docker", username = "docker", password = "docker", host = "prosody_postgres" }
sql_manage_tables = "true"

dhparam = "/etc/prosody/certs/dh-2048.pem";

Component "conference.xmpp.{{ domain }} "muc"
    name = "muc rooms!"

Component "pubsub.xmpp.{{ domain }}" "pubsub"
    autocreate_on_subscribe = "true"
